#include "ros/ros.h"
#include "std_msgs/String.h"

#include <sstream>

/**
 * This tutorial demonstrates simple sending of messages over the ROS system.
 */
int main(int argc, char **argv)
{
  ros::init(argc, argv, "Mcontroller");

  
  ros::NodeHandle n;

  ros::Publisher Motor_pub = n.advertise<std_msgs::Float64>("/tilt_controller/command", 1000);

  ros::Rate loop_rate(0.2);

  /**
   * A count of how many messages we have sent. This is used to create
   * a unique string for each message.
   */
  int count = 0;
  while (ros::ok())
  {
    /**
     * This is a message object. You stuff it with data, and then publish it.
     */
    std_msgs::Float64 msg;

     double ss;
	ss=-1.0;
  //  ss << "hello world " << count;
  //  msg.data = ss.str();

    ROS_INFO("%.2f", ss);
   
    /**
     * The publish() function is how you send messages. The parameter
     * is the message object. The type of this object must agree with the type
     * given as a template parameter to the advertise<>() call, as was done
     * in the constructor above.
     */
    chatter_pub.publish(ss);

    ros::spinOnce();

    loop_rate.sleep();
    ++count;
  }


  return 0;
}
